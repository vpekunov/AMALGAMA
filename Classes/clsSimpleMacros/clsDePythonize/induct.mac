@unique(LINE,infinity):-
  (\s*\\n)->{EMPTY}|(^(\s*)->{SB}([^\\]*)->{LB}\\n)|((\s*)->{S}([^\\]*)->{L}\\n)->{FULL}|($)->{END}.
pop_braces(M,ID,[H|T],H,[H|T]):-
  insert_before(M,ID,H),
  insert_before(M,ID,'}\\n'),
  !.
pop_braces(M,ID,[H|T],V,T1):-
  insert_before(M,ID,H),
  insert_before(M,ID,'}\\n'),
  pop_braces(M,ID,T,V,T1),
  !.
handle:-
  xpath('LINE','/EMPTY',[_]),
  !.
handle:-
  xpath('LINE','/SB[text()='''']',[_]),
  asserta(offs([''])),
  !.
handle:-
  xpath('LINE','/SB[text()!='''']/text()',[SBText]),
  xpath('LINE','/SB[text()!='''']/SB',[SBID]),
  asserta(offs([SBText,''])),
  insert_before('LINE',SBID,'{\\n'),
  !.
handle:-
  xpath('LINE','/FULL/S/text()',[SText]),
  offs([SText|_]),
  !.
handle:-
  xpath('LINE','/FULL/S/text()',[SText]),
  offs([SPrev|T]),
  atom_length(SPrev,N1),
  atom_length(SText,N2),
  <(N1,N2),
  xpath('LINE','/FULL/S',[SID]),
  insert_before('LINE',SID,SPrev),
  insert_before('LINE',SID,'{\\n'),
  retractall(offs(_)),
  asserta(offs([SText,SPrev|T])),
  !.
handle:-
  xpath('LINE','/FULL/S/text()',[SText]),
  offs([SPrev|T]),
  atom_length(SPrev,N1),
  atom_length(SText,N2),
  >(N1,N2),
  xpath('LINE','/FULL',[FID]),
  pop_braces('LINE',FID,T,SText,T1),
  retractall(offs(_)),
  asserta(offs(T1)),
  !.
handle:-
  xpath('LINE','/END',[EID]),
  offs([SPrev|T]),
  atom_length(SPrev,N1),
  >(N1,0),
  pop_braces('LINE',EID,T,'',_),
  retractall(offs(_)),!.
handle:-
  xpath('LINE','/END',[_]),
  offs([''|_]),
  retractall(offs(_)),!.
@goal:-
  handle.
@done:-
  clear_db.
